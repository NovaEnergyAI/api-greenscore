'use client';

import React, { useState } from 'react';
import { ThirdwebSDKProvider } from '@thirdweb-dev/react';
import { useUser } from '@root/context/UserContext';
import SignInWithWeb3 from '@root/components/ui/signin/SignInWithWeb3';
import SuccessScreen from '@root/components/ui/success/SuccessScreen';
import { useCeramicContext } from '@root/context/CeramicContext';
import { authenticateCeramic } from '@root/scripts/authenticate';

const AuthenticatePage = () => {
  const { user } = useUser();
  const { ceramic, composeClient } = useCeramicContext();
  const [isVisible, setIsVisible] = useState(true);

  const handleKeyDid = async () => {
    try {
      localStorage.setItem('ceramic:auth_type', 'key');
      await authenticateCeramic(ceramic, composeClient);
      console.log('Key DID authentication successful (page.tsx)');
    } catch (error) {
      console.error('Key DID Authentication failed! ', error);
    }
  };

  const handleEthPkh = async () => {
    try {
      localStorage.setItem('ceramic:auth_type', 'eth');
      await authenticateCeramic(ceramic, composeClient);
      console.log('Ethereum PKH authentication successful (page.tsx)');
    } catch (error) {
      console.error('Ethereum PKH Authentication failed! ', error);
    }
  };

  return (
    <div>
      {user ? (
        <SuccessScreen message="You've successfully signed in!" />
      ) : (
        <>
          <h2>Sign In With Web3</h2>
          <ThirdwebSDKProvider activeChain="ethereum" clientId="6c008bdcd6760736ab3ffcd4deb713dd">
            <SignInWithWeb3 />
          </ThirdwebSDKProvider>
          {isVisible && (
            <div className='popup'>
              <div className='popup-content'>
                <h2>Authenticate</h2>
                <span>
                  <button onClick={handleKeyDid}>Key DID</button>
                </span>
                <span>
                  <button onClick={handleEthPkh}>Ethereum DID PKH</button>
                </span>
                <br />
                <br />
                <strong>Key DID:</strong> A DID generated by Ceramic that is stored
                <br /> in your browser's local storage. It should already
                <br />
                be generated during setup process.
                <br />
                <br />
                <strong>Ethereum DID PKH:</strong> A DID generated by your wallet
                <br />
                (in simpler terms: login with MetaMask).
              </div>
            </div>
          )}
        </>
      )}
    </div>
  );
};

export default AuthenticatePage;
